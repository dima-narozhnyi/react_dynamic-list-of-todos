{"version":3,"sources":["components/TodoList/TodoList.tsx","api/api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","state","searchQuery","filterBy","handleChangeInput","event","value","target","setState","handleChangeSelect","getPreparedTodos","preparedTodos","props","todos","filter","todo","title","toLowerCase","includes","completed","this","selectedUserId","selectUser","visibleTodos","className","action","htmlFor","id","type","placeholder","onChange","map","classNames","checked","readOnly","userId","onClick","React","Component","request","url","a","fetch","response","ok","Error","status","statusText","json","getUser","CurrentUser","user","loadDataError","loadData","prevProps","clearUser","name","email","phone","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a77341f4.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\n\ninterface Props {\n  todos: Todo[],\n  selectUser: (id: number) => void,\n  selectedUserId: number,\n}\n\ninterface State {\n  searchQuery: string,\n  filterBy: string,\n}\n\nexport class TodoList extends React.Component<Props, State> {\n  state = {\n    searchQuery: '',\n    filterBy: 'all',\n  };\n\n  handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    this.setState({\n      searchQuery: value,\n    });\n  };\n\n  handleChangeSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    this.setState({\n      filterBy: value,\n    });\n  };\n\n  getPreparedTodos = () => {\n    const { searchQuery, filterBy } = this.state;\n    const { todos } = this.props;\n\n    let preparedTodos = todos.filter(todo => (\n      todo.title.toLowerCase().includes(searchQuery.toLowerCase())\n    ));\n\n    preparedTodos = preparedTodos.filter((todo) => {\n      switch (filterBy) {\n        case 'active':\n          return !todo.completed;\n        case 'compleated':\n          return todo.completed;\n        case 'all':\n        default:\n          return todo;\n      }\n    });\n\n    return preparedTodos;\n  };\n\n  render() {\n    const { searchQuery, filterBy } = this.state;\n    const { selectedUserId, selectUser } = this.props;\n\n    const visibleTodos = this.getPreparedTodos();\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <form className=\"TodoList__form\" action=\"\">\n          <label className=\"TodoList__label\" htmlFor=\"search\">\n            Search by title\n            <input\n              id=\"search\"\n              type=\"text\"\n              value={searchQuery}\n              placeholder=\"Search\"\n              className=\"TodoList__input\"\n              onChange={this.handleChangeInput}\n            />\n          </label>\n          <label className=\"TodoList__label\" htmlFor=\"todoStatus\">\n            Show by status\n            <select\n              id=\"todoStatus\"\n              value={filterBy}\n              className=\"TodoList__input\"\n              onChange={this.handleChangeSelect}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"compleated\">Completed</option>\n              <option value=\"active\">Active</option>\n            </select>\n          </label>\n        </form>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {visibleTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames(\n                  'TodoList__item',\n                  {\n                    'TodoList__item--unchecked': !todo.completed,\n                    'TodoList__item--checked': todo.completed,\n                  },\n                )}\n              >\n                <input\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  readOnly\n                />\n                <p>{todo.title}</p>\n                <button\n                  type=\"button\"\n                  className={classNames(\n                    'TodoList__user-button button', {\n                      'TodoList__user-button--selected': todo.userId === selectedUserId,\n                    },\n                  )}\n                  onClick={() => {\n                    selectUser(todo.userId);\n                  }}\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","const API_URL = 'https://mate.academy/students-api';\n\nexport const request = async (url: string) => {\n  const response = await fetch(`${API_URL}${url}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  return response.json();\n};\n\nexport const getTodos = () => request('/todos');\nexport const getUser = (id: number) => request(`/users/${id}`);\n","import React from 'react';\nimport { getUser } from '../../api/api';\nimport './CurrentUser.scss';\n\ninterface Props {\n  selectedUserId: number,\n  clearUser: () => void,\n}\n\ninterface State {\n  user: User | null,\n  loadDataError: boolean,\n}\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: null,\n    loadDataError: false,\n  };\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { selectedUserId } = this.props;\n\n    if (prevProps.selectedUserId !== selectedUserId) {\n      this.loadData();\n    }\n  }\n\n  loadData = async () => {\n    try {\n      const { selectedUserId } = this.props;\n      const user = await getUser(selectedUserId);\n\n      this.setState({\n        user, loadDataError: false,\n      });\n    } catch (error) {\n      this.setState({\n        user: null, loadDataError: true,\n      });\n    }\n  };\n\n  render() {\n    const { user, loadDataError } = this.state;\n    const { selectedUserId, clearUser } = this.props;\n\n    return (\n      <>\n        {user && (\n          <div className=\"CurrentUser\">\n            <h2 className=\"CurrentUser__title\">\n              <span>{`Selected user: ${selectedUserId}`}</span>\n            </h2>\n            <h3 className=\"CurrentUser__name\">{user.name}</h3>\n            <p className=\"CurrentUser__email\">{user.email}</p>\n            <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n            <button\n              type=\"button\"\n              className=\"CurrentUser__clear button\"\n              onClick={clearUser}\n            >\n              Clear\n            </button>\n          </div>\n        )}\n        {loadDataError && (\n          <p className=\"CurrentUser__error-message\">User not found</p>\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\ninterface State {\n  todos: Todo[],\n  selectedUserId: number;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({ todos });\n  }\n\n  selectUser = (id: number) => {\n    this.setState({ selectedUserId: id });\n  };\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  };\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectedUserId={selectedUserId}\n            selectUser={this.selectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                selectedUserId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}